name: Deploy to AWS EC2 # Name of the GitHub Actions workflow

on: # Define the event that triggers the workflow
  push: # Trigger on push event
    branches: # Specify branch names that trigger the workflow
      - ops # Trigger only on pushes to the ops branch

jobs: # Define jobs to run
  merge-to-main: # Job ID
    runs-on: ubuntu-latest # Runner environment to use
    steps: # Steps to execute in the job
      - name: Checkout code # Step to checkout the repository code
        uses: actions/checkout@v2 # Uses the checkout action to access the code

      - name: Configure Git # Step to configure git user for commits
        run: |
          git config --global user.email "blibechmedamine@gmail.com"
          git config --global user.name "med3633"

      - name: Merge ops branch into main # Step to merge the ops branch into main
        run: |
          git fetch origin main:main 
          git merge main --no-edit 
          git push origin HEAD:main 

  deploy: # Deployment job
    needs: merge-to-main # This job needs to run after the merge-to-main job
    runs-on: ubuntu-latest # Runner environment
    steps: # Steps for deployment
      - name: Checkout main branch # Step to checkout the main branch
        uses: actions/checkout@v2 # Use checkout action
        with:
          ref: main # Specify the main branch

      - name: Setup Docker # Step to setup Docker
        uses: docker/setup-buildx-action@v1 # Use Docker setup action

      - name: Login to Docker Hub # Step to login to Docker Hub
        uses: docker/login-action@v1 # Use Docker login action
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Docker username from secrets
          password: ${{ secrets.DOCKER_PASSWORD }} # Docker password from secrets

      - name: Build and Push Docker image # Step to build and push Docker images
        run: |
          docker-compose build 
          docker-compose push 
      - name: Deploy to AWS EC2 # Deployment step
        run: |

      - name: Deploy to AWS EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.IP}} >> ~/.ssh/known_hosts
          
          ssh ubuntu@${{ secrets.IP}} "docker-compose -f ./docker-compose.yml up -d"
