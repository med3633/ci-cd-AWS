# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "ops" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.0, 16.0, 18.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
  
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
       push: true
       tags: mohamedamineblibech/node:latest

    
    - name: Deploy using ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_ADDRESS }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # echo "Navigating to the project directory..."
          # cd /home/ubuntu/test/ci-cd-AWS/ || exit
          
          # echo "Checking current directory..."
          # pwd
          
          # echo "Listing files..."
          # ls -al
          
          echo "Pulling latest changes from Git repository..."
          git pull origin main
          
          echo "Running Docker Compose..."
          sudo docker-compose -f /home/ubuntu/test/ci-cd-AWS/docker-compose.yml up -d

    #     script: |
    #       cd /home/ubuntu/test/ci-cd-AWS/
    #       git pull 
    #       git status
    #       # npm install 
    #       # npm run build
    #       # npm run generate
    #       sudo docker-compose up -d
    # - name: Debugging Output
    #   run: |
    #     echo "Host: ${{ secrets.EC2_ADDRESS }}"
    #     echo "Username: ${{ secrets.EC2_USERNAME }}"
          
